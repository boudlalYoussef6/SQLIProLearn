version: '3.7'

services:
    server:
        build:
            context: .
            dockerfile: ./docker/server/Dockerfile
        expose:
            - "9000"
            - "9003"
        ports:
            - "80:80"
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - ./docker/server/apache/sites-enabled:/etc/apache2/sites-enabled
            - ./docker/server/php/php.ini:/usr/local/etc/php/conf.d/extra-php-config.ini
            - ./docker/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
        depends_on:
            - database
#            - rabbitmq
#            - redis
        networks:
            - inner_net

    database:
        healthcheck:
            test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
            interval: 5s
            retries: 5
        image: mysql
        volumes:
            - db_data:/var/lib/mysql
            - ./docker/db/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: 'superSecr3t'
            MYSQL_USER: 'app_user'
            MYSQL_PASSWORD: 't3rceS'
            MYSQL_DATABASE: 'database'
        networks:
            - inner_net

    myadmin:
        image: phpmyadmin/phpmyadmin:5
        environment:
            PMA_HOST: database
        ports:
            - "8080:80"
        depends_on:
            - database
        networks:
            - inner_net
        volumes:
            - db_admin_data:/var/www/html

    mongodb:
        image: "mongo"
        volumes:
            - "mongodb_data:/data/db"
        restart: "on-failure"
        networks:
            - inner_net

    mongo-express:
        networks:
            - inner_net
        image: mongo-express
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example
            ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
            ME_CONFIG_BASICAUTH: false

#    mailcatcher:
#        image: yappabe/mailcatcher
#        ports:
#            - "1025:1025"
#            - "1080:1080"
#        networks:
#            - inner_net

#    rabbitmq:
#        image: rabbitmq:management
#        ports:
#            - "5672:5672"
#            - "15672:15672"
#        networks:
#            - inner_net

#    kibana:
#        depends_on:
#            - elasticsearch
#        image: docker.elastic.co/kibana/kibana:8.13.1
#        volumes:
#            - kibana-data:/usr/share/kibana/data
#        networks:
#            - inner_net
#        ports:
#            - 5601:5601
#        restart: always
#        environment:
#            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

#    s3:
#        image: minio/minio
#        networks:
#            - inner_net
#        environment:
#            MINIO_ROOT_USER: access1234
#            MINIO_ROOT_PASSWORD: secret1234
#        volumes:
#            - ./data/minio:/data
#        command: server /data --console-address ":9001"
#        ports:
#            - 9000:9000
#            - 9001:9001

    elasticsearch:
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.12.1"
        environment:
            - node.name=elasticsearch
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - discovery.type=single-node
            - xpack.security.enabled=false
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - esdata:/usr/share/elasticsearch/data
        ports:
            - 9200:9200
        networks:
            - inner_net

    graylog:
        image: "graylog/graylog:4.3.2"
        depends_on:
            -   elasticsearch
            -   mongodb
        entrypoint: "/usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh"
        environment:
            GRAYLOG_PASSWORD_SECRET: somepasswordpepper
            # to generate a password hash, type: echo -n admin | shasum -a 256
            GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
            GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9001"
            GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9001/"
            GRAYLOG_ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
            GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
        ports:
            - "5044:5044/tcp"   # Beats
            - "5140:5140/udp"   # Syslog
            - "5140:5140/tcp"   # Syslog
            - "5555:5555/tcp"   # RAW TCP
            - "5555:5555/udp"   # RAW TCP
            - "9001:9001/tcp"   # Server API
            - "12201:12201/tcp" # GELF TCP
            - "12201:12201/udp" # GELF UDP
            - "13301:13301/tcp" # Forwarder data
            - "13302:13302/tcp" # Forwarder config
        volumes:
            - "graylog_data:/usr/share/graylog/data/data"
            - "graylog_journal:/usr/share/graylog/data/journal"
        restart: "on-failure"
        networks:
            - inner_net

#    redis:
#        container_name: redis
#        hostname: redis
#        image: redis
#
#    redis-commander:
#        container_name: redis-commander
#        hostname: redis-commander
#        image: rediscommander/redis-commander:latest
#        restart: always
#        environment:
#            - REDIS_HOSTS=local:redis:6379
#        ports:
#            - "8081:8081"

volumes:
    db_data:
    db_admin_data:
    kibana-data:
    mongodb_data:
    graylog_data:
    graylog_journal:
    esdata:

networks:
    inner_net:
