{% extends 'site.html.twig' %}

{% block title %}Courses{% endblock %}

{% block content %}

    {% if pagination  is defined and pagination is not empty %}
        <section class="content">
            <div class="container-fluid">
                <h1>List des cours</h1>
                <div class="row">
                    {% for course in pagination %}
                        <div class="col-md-6 mb-4">
                            <div class="card flex-row">
                                <div class="row g-0">
                                    <img class="card-img card-img-left"
                                         src="{{ asset(random(['images/php_Elephant.jpg', 'images/php_Elephant_V2.jpg', 'images/php_Elephant_V3.jpg'])) }}"
                                         alt="Card image"
                                    />
                                </div>
                                <div class="col-md-9">
                                    <div class="card-body">
                                        <h4 class="card-title">{{ course.label }}</h4>
                                        <p class="card-text">
                                            {{ course.description|striptags|length > 50 ? course.description|striptags|slice(0, 50) ~ '...' : course.description|striptags }}
                                        </p>
                                        <div class="card-footer d-flex gap-2 flex-wrap">
                                            <a href="{{ url('app_course_details', {'id': course.id}) }}"
                                               class="btn btn-primary">
                                                <i class="menu-icon tf-icons bx bx-book-open"></i> Consulter
                                            </a>
                                            {% if is_granted('edit', course) %}
                                                <a href="{{ url('app_course_edit', {'id': course.id}) }}"
                                                   class="btn btn-outline-warning">
                                                    <i class="menu-icon tf-icons bx bx-edit"></i>
                                                </a>
                                            {% endif %}
                                            {% if is_granted('delete', course) %}
                                                <a href="{{ url('app_course_delete', {'id': course.id}) }}"
                                                   class="btn btn-outline-danger">
                                                    <i class="menu-icon tf-icons bx bx-eraser"></i>
                                                </a>
                                            {% endif %}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
            <div class="pagination">
                {{ knp_pagination_render(pagination) }}
            </div>
        </section>
    {% else %}
        <div class="alert alert-warning" role="alert">
            Pas de cours dispoinible
        </div>
    {% endif %}
{% endblock %}

{% block custum_css %}
    <style>
        .favorite {
            color: yellow;
        }
        .not-favorite {
            color: grey;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toggleButtons = document.querySelectorAll('.btn-toggle-favorite');

            toggleButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const courseId = this.getAttribute('data-course-id');
                    const isFavorite = this.hasAttribute('data-is-favorite');
                    const toggleUrl = isFavorite ?
                        this.getAttribute('data-remove-url') :
                        this.getAttribute('data-toggle-url');

                    fetch(toggleUrl, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                            'Content-Type': 'application/json'
                        },
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.status === 'success') {
                                if (isFavorite) {
                                    this.removeAttribute('data-is-favorite');
                                    this.innerHTML = '<i class="fas fa-star not-favorite"></i>';
                                } else {
                                    this.setAttribute('data-is-favorite', 'true');
                                    this.innerHTML = '<i class="fas fa-star favorite"></i>';
                                }

                                // Afficher un toast de succès
                                const toastClass = isFavorite ? 'bg-danger' : 'bg-success';
                                $(document).Toasts('create', {
                                    class: toastClass,
                                    title: 'Favoris mis à jour',
                                    body: data.message
                                });
                            } else {
                                // Afficher un toast d'erreur en rouge
                                $(document).Toasts('create', {
                                    class: 'bg-danger',
                                    title: 'Erreur',
                                    body: data.message
                                });
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            // Afficher un toast d'erreur réseau en rouge
                            $(document).Toasts('create', {
                                class: 'bg-danger',
                                title: 'Erreur',
                                body: 'Une erreur réseau est survenue. Veuillez vérifier votre connexion Internet.'
                            });
                        });
                });
            });
        });

    </script>
{% endblock %}
