#!/bin/sh

set -e

unset CDPATH

IFS='
'

get_config() {
    for candidate in .php-cs-fixer.php .php-cs-fixer.dist.php .php_cs .php_cs.dist; do
        if test -f "./$candidate"; then
            echo "./$candidate"
            return
        fi
    done
}

run_php_cs_fixer() {
    php_cs_fixer_bin=
    for candidate in docker compose exec server vendor/bin/php-cs-fixer; do
        if test -f "$candidate"; then
            php_cs_fixer_bin="$candidate"
            break
        fi
    done

    if test -z "$php_cs_fixer_bin"; then
        return  # Noop, php-cs-fixer not found.
    fi

    config="$(get_config)"
    if test -z "$config"; then
        return  # Noop, php-cs-fixer config not found.
    fi

    changed_files=$(git diff --staged --name-only --diff-filter=ACMRTUXB)

    if ! echo "${changed_files}" | grep -qE "^(laravel/)?(\\.php-cs-fixer(\\.dist)?\\.php|composer\\.lock)$"; then
        extra_args=$(printf -- '--path-mode=intersection\n--\n%s' "${changed_files}")
    else
        extra_args=''
    fi

    export PHP_CS_FIXER_IGNORE_ENV="${PHP_CS_FIXER_IGNORE_ENV:-1}"
    export XDEBUG_MODE="${XDEBUG_MODE:-off}"

    rerun_with_violation_details() {
        echo >&2 "Coding guidelines pre-commit check failed."
        echo >&2 "Running check again in verbose mode ..."

        docker exec sqli__learn-pro__webserver "$php_cs_fixer_bin" fix --config="$config"\
            -vvv \
            --diff \
            --dry-run \
            --stop-on-violation \
            --using-cache=no \
			--allow-risky=yes \
            ${extra_args}

        exit 1
    }

   	docker exec sqli__learn-pro__webserver "$php_cs_fixer_bin" fix \
        --config="$config" \
        -q \
        --dry-run \
        --stop-on-violation \
        --using-cache=no \
		--allow-risky=yes \
        ${extra_args} || rerun_with_violation_details
}

run_php_cs_fixer