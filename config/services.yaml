# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Configuration AWS S3 / Minio
    Aws\S3\S3Client:
        class: Aws\S3\S3Client
        arguments:
            -
                version: 'latest'
                region: 'eu-east-1'
                endpoint: 'http://minio:9000'
                use_path_style_endpoint: true
                credentials:
                    key: 'DMvAimp4sWuhyKVUZ2VN'
                    secret: 'u64W7bMDniKkpdqpwLOAkou14OFJRBgwIfNjCOvw'

    App\Service\UdemyApiClientInterface: '@App\Service\UdemyApiClient'
    
    Symfony\Component\Ldap\Ldap:
        arguments: [ '@Symfony\Component\Ldap\Adapter\ExtLdap\Adapter' ]
        tags: [ 'ldap' ]

    Symfony\Component\Ldap\Adapter\ExtLdap\Adapter:
        arguments:
            -   host: '%env(LDAP_URL)%'
                port: '%env(int:LDAP_PORT)%'
                options:
                    protocol_version: 3
                    referrals: false

    Symfony\Component\Dotenv\Command\DotenvDumpCommand: ~

    Redis:
        # you can also use \RedisArray, \RedisCluster, \Relay\Relay or \Predis\Client classes
        class: \Redis
        calls:
            - connect:
                - '%env(REDIS_HOST)%'
                - '%env(int:REDIS_PORT)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'
            # you can optionally pass an array of options. The only options are 'prefix' and 'ttl',
            # which define the prefix to use for the keys to avoid collision on the Redis server
            # and the expiration time for any given entry (in seconds), defaults are 'sf_s' and null:
            # - { 'prefix': 'my_prefix', 'ttl': 600 }   